DOM-METHODS: 
getElementById:

In JavaScript, getElementById is a method used to select an HTML element based on its unique identifier (ID). It returns the element with the specified ID attribute.

Syntax:
var element = document.getElementById(id);

Example:
<div id="myElement">This is a div element with the ID "myElement"</div>
var myElement = document.getElementById('myElement');
myElement.style.backgroundColor = 'yellow';

getElementsByTagName:
In JavaScript, getElementsByTagName is a method that allows you to select elements in the HTML document by their tag name. It returns a collection of elements with the specified tag name.

Syntax:
var elements = document.getElementsByTagName(tagName);

Example:
var paragraphs = document.getElementsByTagName('p');
for (var i = 0; i < paragraphs.length; i++) {
    // Do something with each paragraph, for example:
    paragraphs[i].style.color = 'red'; // Change the color of each paragraph to red
}


GETELEMENTBYCLASSNAME

In JavaScript, getElementsByClassName is a method similar to getElementsByTagName, but it selects elements based on their CSS class name rather than their tag name.

Syntax:
var elements = document.getElementsByClassName(className);

Example:
var elements = document.getElementsByClassName('example');
for (var i = 0; i < elements.length; i++) {
    // Do something with each element, for example:
    elements[i].style.color = 'blue'; // Change the color of each element to blue
}

querySelector:

In JavaScript, the querySelector method allows you to select the first element that matches a specified CSS selector. It's a powerful tool for selecting elements based on various criteria like tag name, class, ID, attribute, or even complex selectors.

querySelector returns null if no matches are found, so you need to handle that possibility in your code if necessary.
Syntax:
var element = document.querySelector(selector);

Example:
var exampleElement = document.querySelector('.example');
 
querySelectorALL:

In JavaScript, the querySelectorAll method is similar to querySelector, but it selects all elements that match a specified CSS selector, rather than just the first one. It returns a NodeList containing all matching elements.

The querySelectorAll method always returns a NodeList, even if there are no matches, so you won't get null as with querySelector. However, the NodeList might be empty if there are no matches.

Syntax:
var elements = document.querySelectorAll(selector);

Example:
var combinedElements = document.querySelectorAll('div.example');


